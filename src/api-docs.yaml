openapi: 3.0.1
info:
  title: Ourair developer API
  description: Full documentation API for Ourair Project
  version: 1.0.0
servers:
  - url: http://localhost:3001/api/v1
    description: Local development server
  - url: https://bw2nj1xt-3001.asse.devtunnels.ms/api/v1
    description: staging development server
  - url: https://ourair.my.id/api/v1
    description: production development server
tags:
  - name: Authentication
  - name: Booking & Transaction
  - name: Notifications

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
paths:
  /auth/signup:
    post:
      tags:
        - Authentication
      description: Register a new user in the system and send otp to email verify their email
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Naufal Andya Faiz
                email:
                  type: string
                  example: andyakuliah@gmail.com
                phone_number:
                  type: string
                  example: 089653406790
                password:
                  type: string
                  example: waduh12345
      responses:
        '201':
          description: user successfully registered
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: OTP code is sent to andyakuliah@gmail.com
        '409':
          description: check email or phone number if already used
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: email is already used
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: An error occurred during login
  /auth/signin:
    post:
      tags:
        - Authentication
      description: Login and give session token to user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: wowowow@gmail.com
                password:
                  type: string
                  example: password12345
      responses:
        '201':
          description: User login and get session token
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: success
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 12345
                      name:
                        type: string
                        example: John Doe
                      username:
                        type: string
                        example: johndoe
                      email:
                        type: string
                        example: wowowow@gmail.com
                      phone_number:
                        type: string
                        example: +1234567890
                      isVerified:
                        type: boolean
                        example: true
                      role:
                        type: string
                        example: user
                      token:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Invalid email or password
        '404':
          description: email is not registered
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: email is not registered
        '409':
          description: password is not match
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: password is not match


        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: internal server error
  /auth/verify-email-token:
    post:
      tags:
        - Authentication
      description: Validate OTP being sent to email and verify user's email
      requestBody:
        content:
          application/json:
            schema:
             type: object
             properties:
              email:
                type: string
                example : andyakuliah@gmail.com
              otp:
                type: string
                minLength: 6
                maxLength: 6
                example: 894819
      responses:
        '201':
          description: verify otp that was sent to email
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: email verification is success
        '200':
          description: otp invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Invalid or expired OTP
        '401':
          description: error unexpected
          content:
            application/json:
              schema:
                type: object
                properties: 
                  status: 
                    type: boolean
                    example: false error 
                  message: 
                    type: string
                    example: error verifying email unexpected
        '500':
          description: service error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: internal server error
  /auth/check-email:
    post:
      tags:
        - Authentication
      description: Search user by email to search forgotten user's password
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: andyakuliah@gmail.com
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: success
        '404':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: user with email andyakuliah@gmail.com is not exist
        '500':
          description: internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: internal server error       
  /auth/try-send-email:
    post:
      tags:
        - Authentication
      description: Send new OTP verification again if it not being sent
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: andyakuliah@gmail.com
      responses:
        '201':
          description: send email again send otp
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message: 
                     type: string
                     example: new OTP already sent to andyakuliah@gmail.com
        '404':
          description: not found email
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Email is not exist
  /auth/forgot-password-send-email:
    post:
      tags: 
        - Authentication
      description: Send link with token to redirect user to reset-password page
      requestBody:
        required:
        content: 
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: andyakuliah@gmail.com
              required:
                - email
      responses:
        '200':
          description: Email sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true                
                  message:
                    type: string
                    example: link for reset password already sent
        '400':
          description: Invalid email address
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: Invalid email address
        '401':
          description: Invalid email address
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: Please enter email
        '404':
          description: Invalid email address
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: email is not exist
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: Internal server error
  /auth/reset-password-do-login:
    post:
      tags:
        - Authentication
      summary: Reset User Password
      description: Allows a user to reset their password using a provided token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  example: "newpassword123"
      responses:
        '200':
          description: Password reset successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: success
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: "John Doe"
                      username:
                        type: string
                        example: "johndoe"
                      email:
                        type: string
                        example: "johndoe@example.com"
                      phone_number:
                        type: string
                        example: "+1234567890"
                      isVerified:
                        type: boolean
                        example: true
                      role:
                        type: string
                        example: "user"
                      newToken:
                        type: string
                        example: "new.jwt.token"
        '401':
          description: Unauthorized, token not provided or authentication failed.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "token not provided!"
                  data:
                    type: string
                    example: null
  components:
    securitySchemes:
      bearerAuth:
        type: http
        scheme: bearer
        bearerFormat: JWT
    responses:
      Unauthorized:
        description: Authentication failed
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: Unauthorized
  /auth/google:
    get:
      tags:
        - Authentication
      summary: Google OAuth Login
      description: Initiates the Google OAuth login process.
      responses:
        '302':
          description: Redirects to Google OAuth login page.
          headers:
            Location:
              description: URL to redirect the user to the Google OAuth login page.
              schema:
                type: string
                example: "https://accounts.google.com/o/oauth2/v2/auth"
  /auth/google/callback:
    get:
      tags:
        - Authentication
      summary: Google OAuth Callback
      description: Handles the Google OAuth callback and user authentication.
      responses:
        '302':
          description: Redirects to the client application with a JWT token.
          headers:
            Location:
              description: URL to redirect the user to the client application with the JWT token.
              schema:
                type: string
                example: "https://xsj9lz0q-5173.asse.devtunnels.ms/auth-user/{token}"
        '401':
          $ref: '#/components/responses/Unauthorized'
    components:
      securitySchemes:
        googleOAuth:
          type: oauth2
          flows:
            authorizationCode:
              authorizationUrl: https://accounts.google.com/o/oauth2/v2/auth
              tokenUrl: https://oauth2.googleapis.com/token
              scopes:
                profile: Access to user's profile information
                email: Access to user's email address
  responses:
    Unauthorized:
      description: Authentication failed
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "John Doe"
        username:
          type: string
          example: "johndoe"
        email:
          type: string
          example: "johndoe@example.com"
        phone_number:
          type: string
          example: "+1234567890"
        isVerified:
          type: boolean
          example: true
        role:
          type: string
          example: "user"
  /booking/create:
    post:
      tags:
        - Booking & Transaction
      description: Create booking by adding passengers and choosing flights. Requires JWT authentication.
      summary: User creates booking for passengers
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                passengers:
                  type: array
                  items:
                    type: object
                    properties:
                      fullname:
                        type: string
                        example: "John Doe"
                      surname:
                        type: string
                        example: "Doe"
                      birth_date:
                        type: string
                        format: date
                        example: "1990-01-01"
                      nationality:
                        type: string
                        example: "USA"
                      document:
                        type: string
                        example: "123456789"
                      country_publication:
                        type: string
                        example: "USA"
                      document_expired:
                        type: string
                        format: date
                        example: "2030-01-01"
                      seat_number:
                        type: string
                        example: "A1"
                      ticket:
                        type: object
                        properties:
                          flight_id:
                            type: integer
                            example: 1604
                      category:
                        type: string
                        example: "adult"
                baby:
                  type: integer
                  example: 2
                booker:
                  type: object
                  properties:
                    fullname:
                      type: string
                      description: "The full name of the booker"
                    surname:
                      type: string
                      description: "The surname of the booker"
                    phone_number:
                      type: string
                      description: "The phone number of the booker"
                    email:
                      type: string
                      format: email
                      description: "The email address of the booker"
                  required:
                    - fullname
                    - surname
                    - phone_number
                    - email

      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "success"
                  data:
                    type: object
                    properties:
                      transaction:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 10
                          midtrans_order_id:
                            type: string
                            nullable: true
                            example: order-id-node-1717589331
                          adult_price:
                            type: integer
                            example: 243986210
                          baby_price:
                            type: integer
                            example: 0
                          tax_price:
                            type: integer
                            example: 24398621
                          total_price:
                            type: integer
                            example: 268384831
                          created_at:
                            type: string
                            format: date-time
                            example: "2024-06-05T11:14:45.062Z"
                          status:
                            type: boolean
                            example: false
                      passengers:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 70
                            fullname:
                              type: string
                              example: "John Doe"
                            surname:
                              type: string
                              example: "Doe"
                            birth_date:
                              type: string
                              format: date-time
                              example: "1990-01-01T00:00:00.000Z"
                            nationality:
                              type: string
                              example: "USA"
                            document:
                              type: string
                              example: "123456789"
                            country_publication:
                              type: string
                              example: "USA"
                            document_expired:
                              type: string
                              format: date-time
                              example: "2030-01-01T00:00:00.000Z"
                            seat_number:
                              type: integer
                              example: 12
                      payment_link:
                        type: string
                        example: "https://app.sandbox.midtrans.com/snap/v4/redirection/a7644ed2-1e0d-4783-b192-660d36427f85"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "error"
                  message:
                    type: string
                    example: "Invalid request format."
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "error"
                  message:
                    type: string
                    example: "Flight with the given ID not found."
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "error"
                  message:
                    type: string
                    example: "An internal server error occurred."
  /flights/search-city-or-country-airport-and-from-to-by-date:
    get:
      summary: Search flights by city or country, airport, and date
      tags:
        - Search
      parameters:
        - in: query
          name: startDate
          schema:
            type: string
            format: date
          required: false
          description: Start date for flight search
        - in: query
          name: endDate
          schema:
            type: string
            format: date
          required: false
          description: End date for flight search
        - in: query
          name: fromcity
          schema:
            type: string
          required: false
          description: Departure city
        - in: query
          name: tocity
          schema:
            type: string
          required: false
          description: Destination city
        - in: query
          name: fromairport
          schema:
            type: string
          required: false
          description: Departure airport
        - in: query
          name: toairport
          schema:
            type: string
          required: false
          description: Destination airport
        - in: query
          name: fromcountry
          schema:
            type: string
          required: false
          description: Departure country
        - in: query
          name: tocountry
          schema:
            type: string
          required: false
          description: Destination country
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          required: false
          description: Page number for pagination
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
          required: false
          description: Number of items per page
        - in: query
          name: class
          schema:
            type: string
          required: false
          description: Flight class

      responses:
        200:
          description: Successfully retrieved flight data
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: success
                  totalItems:
                    type: integer
                  totalPages:
                    type: integer
                  currentPage:
                    type: integer
                  length:
                    type: integer
                  data:
                    type: object
                    properties:
                      flights:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                            airplane_id:
                              type: integer
                            from_id:
                              type: integer
                            to_id:
                              type: integer
                            class:
                              type: string
                            departure_time:
                              type: string
                              format: date-time
                            arrival_time:
                              type: string
                              format: date-time
                            flight_type:
                              type: string
                            ticket_price:
                              type: number
                            fromAirport:
                              type: object
                              properties:
                                id:
                                  type: integer
                                code:
                                  type: string
                                name:
                                  type: string
                                cityCode:
                                  type: string
                                cityName:
                                  type: string
                                countryCode:
                                  type: string
                                countryName:
                                  type: string
                                city:
                                  type: string
                                total_visited:
                                  type: integer
                                thumbnail:
                                  type: string
                            toAirport:
                              type: object
                              properties:
                                id:
                                  type: integer
                                code:
                                  type: string
                                name:
                                  type: string
                                cityCode:
                                  type: string
                                cityName:
                                  type: string
                                countryCode:
                                  type: string
                                countryName:
                                  type: string
                                city:
                                  type: string
                                total_visited:
                                  type: integer
                                thumbnail:
                                  type: string
                            whomAirplaneFlights:
                              type: object
                              properties:
                                id:
                                  type: integer
                                airline_id:
                                  type: integer
                                airplane_code:
                                  type: string
                                whomAirlinesAirplanes:
                                  type: object
                                  properties:
                                    id:
                                      type: integer
                                    name:
                                      type: string
                                    airline_code:
                                      type: string
        '400':
          description: Invalid request parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Invalid request parameters."
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Error searching flights."
  /flights/search-city-or-country:
    get:
      tags:
        - Search
      summary: Get Flights by City or Country Name
      description: Retrieve flights departing or arriving at a specified city or country.
      parameters:
        - in: query
          name: city
          required: false
          schema:
            type: string
          description: The name of the city to search for flights.
        - in: query
          name: country
          required: false
          schema:
            type: string
          description: The name of the country to search for flights.
        - in: query
          name: page
          required: false
          schema:
            type: integer
          description: The page number for pagination (defaults to 1).
        - in: query
          name: limit
          required: false
          schema:
            type: integer
          description: The number of results per page for pagination (defaults to 10).
      responses:
        '200':
          description: A list of flights matching the search criteria.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: success
                  totalItems:
                    type: integer
                    example: 50
                  totalPages:
                    type: integer
                    example: 5
                  currentPage:
                    type: integer
                    example: 1
                  length:
                    type: integer
                    example: 10
                  data:
                    type: object
                    properties:
                      flights:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            airplane_id:
                              type: integer
                              example: 84
                            from_id:
                              type: integer
                              example: 3425
                            to_id:
                              type: integer
                              example: 1658
                            departure_time:
                              type: string
                              format: date-time
                              example: "2024-06-03T12:00:00Z"
                            arrival_time:
                              type: string
                              format: date-time
                              example: "2024-06-03T16:00:00Z"
                            flight_type:
                              type: string
                              example: "DOMESTIC"
                            ticket_price:
                              type: integer
                              example: 4649110
                            fromAirport:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  example: 3425
                                code:
                                  type: string
                                  example: "SYD"
                                name:
                                  type: string
                                  example: "Sydney Kingsford Smith Arpt"
                                cityCode:
                                  type: string
                                  example: "SYD"
                                cityName:
                                  type: string
                                  example: "Sydney"
                                countryCode:
                                  type: string
                                  example: "AU"
                                countryName:
                                  type: string
                                  example: "Australia"
                                city:
                                  type: boolean
                                  example: true
                                total_visited:
                                  type: integer
                                  example: 0
                                thumbnail:
                                  type: string
                                  example: "https://example.com/sydney.webp"
                            toAirport:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  example: 1658
                                code:
                                  type: string
                                  example: "HLP"
                                name:
                                  type: string
                                  example: "Halim Perdana Kusuma Arpt"
                                cityCode:
                                  type: string
                                  example: "JKT"
                                cityName:
                                  type: string
                                  example: "Jakarta"
                                countryCode:
                                  type: string
                                  example: "ID"
                                countryName:
                                  type: string
                                  example: "Indonesia"
                                city:
                                  type: boolean
                                  example: false
                                total_visited:
                                  type: integer
                                  example: 0
                                thumbnail:
                                  type: string
                                  example: "https://example.com/jakarta.webp"
                            whomAirplaneFlights:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  example: 84
                                airline_id:
                                  type: integer
                                  example: 34
                                airplane_code:
                                  type: string
                                  example: "AI636"
                                whomAirlinesAirplanes:
                                  type: object
                                  properties:
                                    id:
                                      type: integer
                                      example: 34
                                    name:
                                      type: string
                                      example: "Malaysia Airlines"
                                    airline_code:
                                      type: string
                                      example: "MH"

        '400':
          description: Invalid request parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Invalid request parameters."
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Error searching flights."
  /flights/recommendation:
    get:
      tags:
        - Search
      summary: Get flight recommendations based on specified criteria.
      description: |
        Returns flight recommendations based on optional parameters such as `tocountry` (destination country) and `fromcountry` (origin country). If both parameters are omitted, returns all available flights.
      parameters:
        - name: page
          in: query
          description: Page number for pagination (default = 1)
          required: false
          schema:
            type: integer
            example: 1
        - name: limit
          in: query
          description: Number of items per page (default = 10)
          required: false
          schema:
            type: integer
            example: 10
        - name: tocountry
          in: query
          description: Destination country code (uppercase)
          required: false
          schema:
            type: string
            example: "USA"
        - name: fromcountry
          in: query
          description: Origin country code (uppercase)
          required: false
          schema:
            type: string
            example: "UK"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    departure_time:
                      type: string
                      format: date-time
                      example: "2024-06-16T08:00:00.000Z"
                    class:
                      type: string
                      example: "Economy"
                    arrival_time:
                      type: string
                      format: date-time
                      example: "2024-06-16T10:30:00.000Z"
                    ticket_price:
                      type: integer
                      example: 500000
                    fromAirport:
                      type: object
                      properties:
                        name:
                          type: string
                          example: "Heathrow Airport"
                        cityName:
                          type: string
                          example: "London"
                        countryName:
                          type: string
                          example: "United Kingdom"
                        rating:
                          type: integer
                          example: 4
                    toAirport:
                      type: object
                      properties:
                        name:
                          type: string
                          example: "JFK Airport"
                        cityName:
                          type: string
                          example: "New York"
                        countryName:
                          type: string
                          example: "USA"
                        rating:
                          type: integer
                          example: 4
                    whomAirplaneFlights:
                      type: object
                      properties:
                        whomAirlinesAirplanes:
                          type: object
                          properties:
                            name:
                              type: string
                              example: "British Airways"
        '500':
          description: Error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Error searching flights"
                  error:
                    type: string
                    example: "Internal server error"
  /flights/search:
    get:
      summary: Retrieve flights based on date and optional filters
      tags:
        - Search
      parameters:
        - name: startDate
          in: query
          description: Start date for flights (format YYYY-MM-DD)
          required: false
          type: string
        - name: endDate
          in: query
          description: End date for flights (format YYYY-MM-DD)
          required: false
          type: string
        - name: page
          in: query
          description: Page number for pagination (default 1)
          required: false
          type: integer
        - name: limit
          in: query
          description: Number of items per page (default 10)
          required: false
          type: integer
        - name: fromcity
          in: query
          description: City name of departure airport
          required: false
          type: string
        - name: tocity
          in: query
          description: City name of destination airport
          required: false
          type: string
        - name: fromairport
          in: query
          description: Name of departure airport
          required: false
          type: string
        - name: toairport
          in: query
          description: Name of destination airport
          required: false
          type: string
        - name: fromcountry
          in: query
          description: Country name of departure airport
          required: false
          type: string
        - name: tocountry
          in: query
          description: Country name of destination airport
          required: false
          type: string
        - name: class
          in: query
          description: Flight class (e.g., Economy, Business)
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              status:
                type: boolean
                description: Indicates if the request was successful
              message:
                type: string
                description: Message indicating the status
              totalItems:
                type: integer
                description: Total number of flights matching the criteria
              totalPages:
                type: integer
                description: Total number of pages based on pagination
              currentPage:
                type: integer
                description: Current page number
              length:
                type: integer
                description: Number of flights returned in the current page
              data:
                type: object
                properties:
                  flights:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: Unique identifier of the flight
                        airplane_id:
                          type: integer
                          description: Identifier of the airplane
                        from_id:
                          type: integer
                          description: Identifier of the departure airport
                        to_id:
                          type: integer
                          description: Identifier of the destination airport
                        class:
                          type: string
                          description: Flight class (e.g., Economy, Business)
                        departure_time:
                          type: string
                          format: date-time
                          description: Departure time of the flight
                        arrival_time:
                          type: string
                          format: date-time
                          description: Arrival time of the flight
                        flight_type:
                          type: string
                          description: Type of the flight
                        ticket_price:
                          type: number
                          description: Price of the ticket
                        fromAirport:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: Unique identifier of the departure airport
                            code:
                              type: string
                              description: Airport code
                            name:
                              type: string
                              description: Airport name
                            cityCode:
                              type: string
                              description: City code of the departure airport
                            cityName:
                              type: string
                              description: City name of the departure airport
                            countryCode:
                              type: string
                              description: Country code of the departure airport
                            countryName:
                              type: string
                              description: Country name of the departure airport
                            city:
                              type: string
                              description: City information of the departure airport
                            total_visited:
                              type: integer
                              description: Total number of visits to the departure city
                            thumbnail:
                              type: string
                              description: URL of the thumbnail image of the departure airport
                        toAirport:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: Unique identifier of the destination airport
                            code:
                              type: string
                              description: Airport code
                            name:
                              type: string
                              description: Airport name
                            cityCode:
                              type: string
                              description: City code of the destination airport
                            cityName:
                              type: string
                              description: City name of the destination airport
                            countryCode:
                              type: string
                              description: Country code of the destination airport
                            countryName:
                              type: string
                              description: Country name of the destination airport
                            city:
                              type: string
                              description: City information of the destination airport
                            total_visited:
                              type: integer
                              description: Total number of visits to the destination city
                            thumbnail:
                              type: string
                              description: URL of the thumbnail image of the destination airport
                        whomAirplaneFlights:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: Unique identifier of the airplane flight relation
                            airline_id:
                              type: integer
                              description: Identifier of the airline operating the flight
                            airplane_code:
                              type: string
                              description: Code of the airplane operating the flight
                            whomAirlinesAirplanes:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  description: Unique identifier of the airline
                                name:
                                  type: string
                                  description: Name of the airline
                                airline_code:
                                  type: string
                                  description: Code of the airline
        '500':
          description: Internal server error
          schema:
            type: object
            properties:
              status:
                type: boolean
                description: Indicates if there was an error
              message:
                type: string
                description: Error message
              error:
                type: string
                description: Detailed error message
  /flights/search-by-id:
    get:
      summary: Retrieve flight information by flight ID
      tags:
        - Search
      parameters:
        - name: id
          in: query
          description: Flight ID to retrieve information for
          required: true
          type: integer
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              status:
                type: boolean
                description: Indicates if the request was successful
              message:
                type: string
                description: Message indicating the status
              data:
                type: object
                properties:
                  id:
                    type: integer
                    description: Unique identifier of the flight
                  airplane_id:
                    type: integer
                    description: Identifier of the airplane
                  from_id:
                    type: integer
                    description: Identifier of the departure airport
                  to_id:
                    type: integer
                    description: Identifier of the destination airport
                  departure_time:
                    type: string
                    format: date-time
                    description: Departure time of the flight
                  arrival_time:
                    type: string
                    format: date-time
                    description: Arrival time of the flight
                  flight_type:
                    type: string
                    description: Type of the flight (e.g., DOMESTIC, INTERNATIONAL)
                  class:
                    type: string
                    description: Class of the flight (e.g., ECONOMY, BUSINESS)
                  ticket_price:
                    type: number
                    description: Price of the ticket
                  seat_id:
                    type: integer
                    description: Identifier of the seat
                  whomAirplaneFlights:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: Unique identifier of the airplane flight relation
                      airline_id:
                        type: integer
                        description: Identifier of the airline
                      airplane_code:
                        type: string
                        description: Code of the airplane operating the flight
                      total_seat:
                        type: integer
                        description: Total number of seats in the airplane
                      baggage:
                        type: integer
                        description: Baggage allowance in kg
                      cabin_baggage:
                        type: integer
                        description: Cabin baggage allowance in kg
                      description:
                        type: string
                        description: Description of the airplane
                      whomAirlinesAirplanes:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: Unique identifier of the airline
                          name:
                            type: string
                            description: Name of the airline
                          airline_code:
                            type: string
                            description: Code of the airline
                  fromAirport:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: Unique identifier of the departure airport
                      code:
                        type: string
                        description: Airport code
                      name:
                        type: string
                        description: Name of the departure airport
                      cityCode:
                        type: string
                        description: City code of the departure airport
                      cityName:
                        type: string
                        description: City name of the departure airport
                      countryCode:
                        type: string
                        description: Country code of the departure airport
                      countryName:
                        type: string
                        description: Country name of the departure airport
                      city:
                        type: boolean
                        description: Indicates if the airport is in a city
                      total_visited:
                        type: integer
                        description: Total number of visits to the departure airport
                      thumbnail:
                        type: string
                        description: URL of the thumbnail image of the departure airport
                      rating:
                        type: string
                        description: Rating of the departure airport
                  toAirport:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: Unique identifier of the destination airport
                      code:
                        type: string
                        description: Airport code
                      name:
                        type: string
                        description: Name of the destination airport
                      cityCode:
                        type: string
                        description: City code of the destination airport
                      cityName:
                        type: string
                        description: City name of the destination airport
                      countryCode:
                        type: string
                        description: Country code of the destination airport
                      countryName:
                        type: string
                        description: Country name of the destination airport
                      city:
                        type: boolean
                        description: Indicates if the airport is in a city
                      total_visited:
                        type: integer
                        description: Total number of visits to the destination airport
                      thumbnail:
                        type: string
                        description: URL of the thumbnail image of the destination airport
                      rating:
                        type: string
                        description: Rating of the destination airport
        '500':
          description: Internal server error
          schema:
            type: object
            properties:
              status:
                type: boolean
                description: Indicates if there was an error
              message:
                type: string
                description: Error message
              error:
                type: string
                description: Detailed error message
  /flights/search-seat-of-flight-id:
    get:
      summary: Retrieve seat information for a specific flight
      tags:
        - Seats
      parameters:
        - name: id
          in: query
          description: Flight ID to retrieve seat information for
          required: true
          type: integer
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              status:
                type: boolean
                description: Indicates if the request was successful
              message:
                type: string
                description: Message indicating the status
              length:
                type: integer
                description: Number of seats available on the flight
              data:
                type: object
                properties:
                  _id:
                    type: string
                    description: Unique identifier for the seat information document
                  flightId:
                    type: integer
                    description: Identifier of the flight
                  __v:
                    type: integer
                    description: Version key for the document
                  seats:
                    type: array
                    items:
                      type: object
                      properties:
                        seatNumber:
                          type: string
                          description: Seat number
                        isBooked:
                          type: boolean
                          description: Indicates if the seat is booked
                        passengerId:
                          type: integer
                          description: Identifier of the passenger who booked the seat
                        _id:
                          type: string
                          description: Unique identifier for the seat document
        '500':
          description: Internal server error
          schema:
            type: object
            properties:
              status:
                type: boolean
                description: Indicates if there was an error
              message:
                type: string
                description: Error message
              error:
                type: string
                description: Detailed error message

  definitions:
    ErrorWithStatusCode:
      type: object
      properties:
        name:
          type: string
          description: Name of the error
        statusCode:
          type: integer
          description: HTTP status code
        message:
          type: string
          description: Error message
    FlightSeats:
      type: object
      properties:
        _id:
          type: string
          description: Unique identifier for the seat information document
        flightId:
          type: integer
          description: Identifier of the flight
        __v:
          type: integer
          description: Version key for the document
        seats:
          type: array
          items:
            type: object
            properties:
              seatNumber:
                type: string
                description: Seat number
              isBooked:
                type: boolean
                description: Indicates if the seat is booked
              passengerId:
                type: integer
                description: Identifier of the passenger who booked the seat
              _id:
                type: string
                description: Unique identifier for the seat document
  /transactions/history:
    get:
      tags:
        - Booking & Transaction
      summary: Get Transaction History
      description: Retrieve the transaction history for the authenticated user.
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Successfully retrieved the transaction history.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: success
                  data:
                    type: object
                    properties:
                      bookingView:
                        type: array
                        items:
                          type: object
                          properties:
                            tickets:
                              type: array
                              items:
                                type: object
                                properties:
                                  passanger_name:
                                    type: string
                                    example: John Doe
                                  fromAirport:
                                    type: string
                                    example: New York
                                  toAirport:
                                    type: string
                                    example: Los Angeles
                                  seat_number:
                                    type: string
                                    example: 12A
                                  departure_time:
                                    type: string
                                    format: date-time
                                    example: 2024-06-03T12:00:00Z
                                  arrival_time:
                                    type: string
                                    format: date-time
                                    example: 2024-06-03T15:00:00Z
                                  price:
                                    type: number
                                    example: 250.00
                            total_price:
                              type: number
                              example: 500.00
                            created_at:
                              type: string
                              format: date-time
                              example: 2024-06-01T10:00:00Z
                            status:
                              type: string
                              example: paid
        '401':
          description: Unauthorized. Token is missing or invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Unauthorized access
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: An error occurred while fetching bookings.
  /notification/notifications:
    get:
      tags:
        - Notifications
      summary: Get User Notifications
      description: Retrieve a list of notifications for the authenticated user.
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          required: false
          schema:
            type: integer
            default: 1
          description: The page number for pagination (defaults to 1).
        - in: query
          name: limit
          required: false
          schema:
            type: integer
            default: 5
          description: The number of results per page for pagination (defaults to 5).
      responses:
        '200':
          description: A list of user notifications.
          content:
            application/json:
              schema:
                type: object
                properties:
                  notifications:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        user_id:
                          type: integer
                          example: 123
                        message:
                          type: string
                          example: "Your order has been shipped."
                        created_at:
                          type: string
                          format: date-time
                          example: "2023-12-01T10:00:00Z"
                  total:
                    type: integer
                    example: 10
                  page:
                    type: integer
                    example: 1
                  limit:
                    type: integer
                    example: 5
        '401':
          description: Unauthorized, user not authenticated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Unauthorized"
        '500':
          description: Internal Server Error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "An error occurred while fetching notifications."
    components:
      securitySchemes:
        bearerAuth:
          type: http
          scheme: bearer
          bearerFormat: JWT
      responses:
        Unauthorized:
          description: Authentication failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
  /notification/notifications/{id}/read:
    patch:
      tags:
        - Notifications
      summary: Mark Notification as Read
      description: Mark a specific notification as read by its ID.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The ID of the notification to mark as read.
      responses:
        '200':
          description: Notification marked as read successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  notification:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      user_id:
                        type: integer
                        example: 123
                      message:
                        type: string
                        example: "Your order has been shipped."
                      is_read:
                        type: boolean
                        example: true
                      created_at:
                        type: string
                        format: date-time
                        example: "2023-12-01T10:00:00Z"
        '401':
          description: Unauthorized, user not authenticated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Unauthorized"
        '404':
          description: Notification not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Notification not found"
        '500':
          description: Internal Server Error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "An error occurred while marking the notification as read."
    components:
      securitySchemes:
        bearerAuth:
          type: http
          scheme: bearer
          bearerFormat: JWT
      responses:
        Unauthorized:
          description: Authentication failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        NotFound:
          description: The specified resource was not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Not Found"
  /users/avatar-profile:
    put:
      tags:
        - Profile
      summary: Update User Avatar
      description: Update the avatar of the authenticated user.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                avatar:
                  type: string
                  format: binary
                  description: The avatar image file to upload.
      responses:
        '200':
          description: Avatar updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success updated avatar"
                  data:
                    type: object
                    properties:
                      avatar:
                        type: string
                        example: "https://ik.imagekit.io/5zwoz8nkr/ourair/12345.jpg"
        '400':
          description: Bad request due to missing avatar file or user ID.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "error"
                  message:
                    type: string
                    example: "Avatar file is missing."
        '401':
          description: Unauthorized, user not authenticated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "error"
                  message:
                    type: string
                    example: "Unauthorized"
        '500':
          description: Internal Server Error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "error"
                  message:
                    type: string
                    example: "An error occurred while updating avatar."
    components:
      securitySchemes:
        bearerAuth:
          type: http
          scheme: bearer
          bearerFormat: JWT
  /users/profile:
    patch:
      tags:
        - Profile
      summary: Update User Profile
      description: Update the profile of the authenticated user.
      security:
        - bearerAuth: []
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "John Doe"
                username:
                  type: string
                  example: "johndoe123"
                phone_number:
                  type: string
                  example: "+1234567890"
                email:
                  type: string
                  example: "john.doe@example.com"
                avatar_link:
                  type: string
                  example: "https://ik.imagekit.io/5zwoz8nkr/ourair/avatar.jpg"
              # required:
              #   - name
              #   - email
      responses:
        '200':
          description: Profile updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  message:
                    type: string
                    example: "Profile updated successfully"
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: "John Doe"
                      username:
                        type: string
                        example: "johndoe123"
                      phone_number:
                        type: string
                        example: "+1234567890"
                      email:
                        type: string
                        example: "john.doe@example.com"
                      is_Verified:
                        type: boolean
                        example: true
                      role:
                        type: string
                        example: "USER"
                      created_at:
                        type: string
                        format: date-time
                        example: "2023-06-14T09:00:00Z"
                      avatar_link:
                        type: string
                        example: "https://ik.imagekit.io/5zwoz8nkr/ourair/avatar.jpg"
                      googleId:
                        type: string
                        example: "google12345"
        '400':
          description: Bad request if the request body is missing required fields.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "error"
                  message:
                    type: string
                    example: "Invalid request data."
        '401':
          description: Unauthorized, user not authenticated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "error"
                  message:
                    type: string
                    example: "Unauthorized"
        '500':
          description: Internal Server Error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "error"
                  message:
                    type: string
                    example: "An error occurred while updating profile."
    components:
      securitySchemes:
        bearerAuth:
          type: http
          scheme: bearer
          bearerFormat: JWT

